# Example configuration for PostgreSQL with replication and hourly S3 backups
# This configuration deploys:
# - 1 primary PostgreSQL instance
# - 1 read replica with streaming replication
# - Hourly backups to S3 (MinIO)

postgresql:
  # PostgreSQL image
  image:
    repository: postgres
    tag: "17.4"
    pullPolicy: IfNotPresent

  # Database credentials
  auth:
    username: postgres
    password: "changeme123"
    database: postgres
    replicationUsername: replicator
    replicationPassword: "changeme123"

  # PostgreSQL configuration optimized for replication
  config:
    maxConnections: "100"
    sharedBuffers: "256MB"
    effectiveCacheSize: "1GB"
    walLevel: "replica"
    maxWalSenders: "10"
    walKeepSize: "2GB"

  # Resource limits
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi

  # Persistence
  persistence:
    enabled: true
    size: 10Gi

# Replication Configuration
replication:
  # Enable streaming replication
  enabled: true
  # Number of read replicas (1 replica + 1 primary = 2 total pods)
  replicas: 1
  # Asynchronous replication (safe for dev/test)
  synchronousCommit: "off"

# S3 Backup Configuration
backup:
  # Enable backups
  enabled: true

  # Hourly backup schedule (every hour at minute 0)
  # Format: minute hour day month weekday
  schedule: "0 * * * *"

  # Keep last 5 successful backup jobs
  successfulJobsHistoryLimit: 5
  # Keep last 2 failed backup jobs
  failedJobsHistoryLimit: 2

  # S3 configuration (MinIO for local testing)
  s3:
    bucket: "postgres-backups"
    region: "us-east-1"
    # Endpoint will be set via --set flag in Makefile
    # endpoint: "http://host.docker.internal:9000"
    # Prefix defaults to <release-name>/<namespace>/ if left empty
    # Example: metadb/default/
    prefix: ""
    # Credentials will be set via --set flags in Makefile
    # accessKeyId: "minioadmin"
    # secretAccessKey: "minioadmin"

  # Note: Backup retention is managed via S3 bucket lifecycle policies

  # Backup job resources
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Service configuration
service:
  primary:
    type: ClusterIP
    port: 5432
  readOnly:
    enabled: true
    type: ClusterIP
    port: 5432

# Pod labels for organization
podLabels:
  environment: development
  backup-enabled: "true"
