# PostgreSQL with replication example
# Usage: helm install my-postgres save-the-elephant/save-the-elephant -f replication-values.yaml

postgresql:
  auth:
    username: "postgres"
    password: "securePassword123"
    database: "production_db"
    replicationUsername: "replicator"
    replicationPassword: "replicaPassword456"

  persistence:
    enabled: true
    size: 5Gi
    storageClass: ""  # Use your storage class

  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi

  config:
    maxConnections: "200"
    sharedBuffers: "1GB"
    effectiveCacheSize: "3GB"
    walLevel: "replica"
    maxWalSenders: "10"
    walKeepSize: "2GB"

# Enable replication with 2 read replicas
replication:
  enabled: true
  replicas: 2  # Creates 1 primary + 2 replicas = 3 pods total
  synchronousCommit: "on"  # Synchronous replication for data safety
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi

# Service configuration
service:
  primary:
    type: ClusterIP
    port: 5432
  readOnly:
    enabled: true
    type: ClusterIP
    port: 5432

# Enable backups
backup:
  enabled: false


# Anti-affinity to spread pods across nodes
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - save-the-elephant
          topologyKey: kubernetes.io/hostname
