{{- if .Values.backup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "save-the-elephant.fullname" . }}-backup
  labels:
    {{- include "save-the-elephant.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
spec:
  schedule: {{ .Values.backup.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.backup.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.backup.failedJobsHistoryLimit }}
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        {{- include "save-the-elephant.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backup
    spec:
      ttlSecondsAfterFinished: {{ .Values.backup.ttlSecondsAfterFinished }}
      template:
        metadata:
          labels:
            {{- include "save-the-elephant.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: backup
        spec:
          serviceAccountName: {{ include "save-the-elephant.serviceAccountName" . }}
          restartPolicy: OnFailure
          containers:
            - name: backup
              {{- $pgMajorVersion := regexFind "^[0-9]+" .Values.postgresql.image.tag }}
              image: "{{ .Values.backup.image.repository }}:{{ .Values.backup.image.tag | default $pgMajorVersion }}"
              imagePullPolicy: {{ .Values.backup.image.pullPolicy }}
              env:
                # S3 Configuration
                - name: S3_REGION
                  value: {{ .Values.backup.s3.region | quote }}
                - name: S3_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "save-the-elephant.s3SecretName" . }}
                      key: access-key-id
                - name: S3_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "save-the-elephant.s3SecretName" . }}
                      key: secret-access-key
                - name: S3_BUCKET
                  value: {{ .Values.backup.s3.bucket | quote }}
                {{- if .Values.backup.s3.endpoint }}
                - name: S3_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "save-the-elephant.s3SecretName" . }}
                      key: endpoint
                {{- end }}
                {{- if .Values.backup.s3.prefix }}
                - name: S3_PREFIX
                  value: {{ .Values.backup.s3.prefix | quote }}
                {{- else }}
                - name: S3_PREFIX
                  value: "{{ .Release.Name }}/{{ .Release.Namespace }}"
                {{- end }}
                # PostgreSQL Configuration
                - name: POSTGRES_DATABASE
                  value: {{ .Values.postgresql.auth.database | quote }}
                {{- if .Values.replication.enabled }}
                - name: POSTGRES_HOST
                  value: "{{ include "save-the-elephant.fullname" . }}-postgresql-0.{{ include "save-the-elephant.fullname" . }}-postgresql-headless.{{ .Release.Namespace }}.svc.cluster.local"
                {{- else }}
                - name: POSTGRES_HOST
                  value: "{{ include "save-the-elephant.fullname" . }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local"
                {{- end }}
                - name: POSTGRES_USER
                  value: {{ .Values.postgresql.auth.username | quote }}
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "save-the-elephant.secretName" . }}
                      key: postgres-password
              resources:
                {{- toYaml .Values.backup.resources | nindent 16 }}
{{- end }}
